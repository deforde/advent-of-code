#[allow(dead_code)]
pub fn day_6_part_1(input: &Vec<i64>, n_days: usize) -> usize {
    let mut states = vec![0 as usize; 9];

    for fish in input {
        states[*fish as usize] += 1;
    }

    for _ in 0..n_days {
        states.rotate_left(1);
        states[6] += states[8];
    }

    return states.iter().sum();
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn example_day_6_part_1() {
        let input: Vec<i64> = vec![3,4,3,1,2];

        let ans = day_6_part_1(&input, 80);

        assert_eq!(ans, 5934);
    }

    #[test]
    fn test_day_6_part_1() {
        let input: Vec<i64> = vec![1,4,1,1,1,1,5,1,1,5,1,4,2,5,1,2,3,1,1,1,1,5,4,2,1,1,3,1,1,1,1,1,1,1,2,1,1,1,1,1,5,1,1,1,1,1,1,1,1,1,4,1,1,1,1,5,1,4,1,1,4,1,1,1,1,4,1,1,5,5,1,1,1,4,1,1,1,1,1,3,2,1,1,1,1,1,2,3,1,1,2,1,1,1,3,1,1,1,2,1,2,1,1,2,1,1,3,1,1,1,3,3,5,1,4,1,1,5,1,1,4,1,5,3,3,5,1,1,1,4,1,1,1,1,1,1,5,5,1,1,4,1,2,1,1,1,1,2,2,2,1,1,2,2,4,1,1,1,1,3,1,2,3,4,1,1,1,4,4,1,1,1,1,1,1,1,4,2,5,2,1,1,4,1,1,5,1,1,5,1,5,5,1,3,5,1,1,5,1,1,2,2,1,1,1,1,1,1,1,4,3,1,1,4,1,4,1,1,1,1,4,1,4,4,4,3,1,1,3,2,1,1,1,1,1,1,1,4,1,3,1,1,1,1,1,1,1,5,2,4,2,1,4,4,1,5,1,1,3,1,3,1,1,1,1,1,4,2,3,2,1,1,2,1,5,2,1,1,4,1,4,1,1,1,4,4,1,1,1,1,1,1,4,1,1,1,2,1,1,2];

        let ans = day_6_part_1(&input, 80);

        assert_eq!(ans, 385391);
    }
}